//--------------------------------------------------------------------------------------
// Vertex Shader
//--------------------------------------------------------------------------------------
//1)정점버퍼는 반드시 float4로 반환되어야한다.
//2)반환정점은 투영좌표이어야한다.
//x,y,z,w

//시멘틱 (의미구조)
//레지스터 번호, 어떤 레지스터를 써라. 저장하는 타입별로 저장위치가 다르다.
//SV_POSITION(float4 리턴타입), POSITION(float3 함수전달인자)


cbuffer VS_CB
{
	//x,y,z,w
	float4 g_color: packoffset(c0);				//: packoffset(c0);
	float g_fTimeX : packoffset(c1.x);			//: packoffset(c1.x);
	float g_iIndex	: packoffset(c1.y);			//: packoffset(c1.y);
	float g_scale : packoffset(c1.z);			//: packoffset(c1.z);
	float w : packoffset(c1.w);					//: packoffset(c1.w);
	//float g_angle: packoffset(c1.w);			//: packoffset(c1.w);
};

float4 GetPos(in float3 pos : POSITION) : SV_POSITION
{
	//float4 rRet;
	//rRet.x = pos.x;
	//rRet.y = pos.y;
	//rRet.z = pos.z;
	//rRet.w = 1;	
	//정규화 w값으로 x와 y와 z값을 나눠서 넘겨준다.w가 1이면 그대로 넘겨준다.

	float3 vPos = pos;
	//vPos.x = pos.x * cos(g_angle) + pos.y * sin(g_angle);
	//vPos.y = pos.y * cos(g_angle) - pos.x * sin(g_angle);
	//vPos.z = 1.0f;

	vPos = vPos * (cos(g_fTimeX) * 0.5f + 0.5f);
	vPos = vPos * g_scale;
	return float4(vPos, 1.0f);	//스위즐링
}

float4 VS(in float3 pos : POSITION ) : SV_POSITION
{
	float4 vPos = GetPos(pos);
	return vPos;
}

//--------------------------------------------------------------------------------------
// Pixel Shader
//--------------------------------------------------------------------------------------
float4 GetColor(uint index) : SV_POSITION
{
	//float4 rRet;
	//rRet.x = pos.x;
	//rRet.y = pos.y;
	//rRet.z = pos.z;
	//rRet.w = 1;	
	//정규화 w값으로 x와 y와 z값을 나눠서 넘겨준다.w가 1이면 그대로 넘겨준다.

	float4 vPos = float4(1,1,1,1);
	switch(index)
	{
	case 0: {vPos = float4( (cos(g_fTimeX) * 0.5f + 0.5f), (sin(g_fTimeX) * 0.5f + 0.5f), (0.5f + cos(g_fTimeX) * 0.5f + 0.5f), 1); break;}
	case 1: {vPos = float4(1, 0, 0, 1); break;}
	case 2: {vPos = float4(1, 0, 1, 1); break;}
	case 3: {vPos = float4(0, 1, 1, 1); break;}
	}
	
	return vPos;	//스위즐링
}

float4 PS(in float4 pos : SV_POSITION ) : SV_Target
{
	//return float4(1,0,0,1);	
	//float fColor = (cos(g_fTimeX) * 0.5f + 0.5f);
	//return float4( fColor, fColor, fColor, 0.0f);

	float4 fColor = GetColor(g_iIndex);
	return fColor;
}